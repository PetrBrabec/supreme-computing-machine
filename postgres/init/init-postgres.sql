-- Enable required extensions
CREATE EXTENSION IF NOT EXISTS vector;
CREATE EXTENSION IF NOT EXISTS pg_trgm;
CREATE EXTENSION IF NOT EXISTS unaccent;
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Create non-root users with limited privileges
DO $do$
BEGIN
    -- n8n user
    IF NOT EXISTS (SELECT FROM pg_user WHERE usename = '${N8N_DB_USER}') THEN
        EXECUTE format('CREATE USER %I WITH PASSWORD %L', '${N8N_DB_USER}', '${N8N_DB_PASSWORD}');
    END IF;

    -- Keycloak user
    IF NOT EXISTS (SELECT FROM pg_user WHERE usename = '${KC_DB_USERNAME}') THEN
        EXECUTE format('CREATE USER %I WITH PASSWORD %L', '${KC_DB_USERNAME}', '${KC_DB_PASSWORD}');
    END IF;

    -- Baserow user
    IF NOT EXISTS (SELECT FROM pg_user WHERE usename = '${BASEROW_DB_USER}') THEN
        EXECUTE format('CREATE USER %I WITH PASSWORD %L', '${BASEROW_DB_USER}', '${BASEROW_DB_PASSWORD}');
    END IF;
END
$do$
;

-- Create databases
CREATE DATABASE keycloak;
CREATE DATABASE baserow;
CREATE DATABASE n8n;
CREATE DATABASE appwrite;

-- Configure keycloak database
\c keycloak
CREATE EXTENSION IF NOT EXISTS vector;
CREATE SCHEMA IF NOT EXISTS keycloak;
GRANT ALL PRIVILEGES ON DATABASE keycloak TO '${KC_DB_USERNAME}';
GRANT ALL PRIVILEGES ON SCHEMA keycloak TO '${KC_DB_USERNAME}';
ALTER DATABASE keycloak OWNER TO '${KC_DB_USERNAME}';

-- Configure baserow database
\c baserow
CREATE EXTENSION IF NOT EXISTS vector;
CREATE EXTENSION IF NOT EXISTS pg_trgm;
CREATE EXTENSION IF NOT EXISTS unaccent;
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
GRANT ALL PRIVILEGES ON DATABASE baserow TO '${BASEROW_DB_USER}';
ALTER DATABASE baserow OWNER TO '${BASEROW_DB_USER}';

-- Configure n8n database
\c n8n
CREATE EXTENSION IF NOT EXISTS vector;
CREATE EXTENSION IF NOT EXISTS pg_trgm;
GRANT ALL PRIVILEGES ON DATABASE n8n TO '${N8N_DB_USER}';
ALTER DATABASE n8n OWNER TO '${N8N_DB_USER}';

-- Configure appwrite database
\c appwrite
CREATE EXTENSION IF NOT EXISTS vector;
CREATE EXTENSION IF NOT EXISTS pg_trgm;
GRANT ALL PRIVILEGES ON DATABASE appwrite TO 'postgres';
ALTER DATABASE appwrite OWNER TO 'postgres';

-- Set default privileges for future tables
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public 
    GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO '${N8N_DB_USER}';

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA keycloak 
    GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO '${KC_DB_USERNAME}';

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public 
    GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO '${BASEROW_DB_USER}';
